services:
  caddy:
    container_name: caddy
    image: caddy:2.7.4-alpine
    restart: unless-stopped
    depends_on:
      - php
      - database
  php:
    container_name: php
    build:
      context: ./
      args:
        - SYMFONY_CLI_VERSION=${SYMFONY_CLI_VERSION:-5.12.0}
        - PHP_VERSION=${PHP_VERSION:-8.4}
    restart: unless-stopped
    env_file:
      - .env.docker
    environment:
      SYMFONY_VERSION: ${SYMFONY_VERSION:-7.3.*}
      STABILITY: ${STABILITY:-stable}
  database:
      image: postgres:${POSTGRES_VERSION:-16}-alpine
      environment:
          POSTGRES_DB: ${POSTGRES_DB:-app}
          # You should definitely change the password in production
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
          POSTGRES_USER: ${POSTGRES_USER:-app}
      healthcheck:
          test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
          timeout: 5s
          retries: 5
          start_period: 60s
      volumes:
          - database_data:/var/lib/postgresql/data:rw
          # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
          # - ./docker/db/data:/var/lib/postgresql/data:rw
    ###< doctrine/doctrine-bundle ###
  elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
      environment:
          - discovery.type=single-node
          - xpack.security.enabled=${ELASTICSEARCH_SECURITY_ENABLED:-false}
          - ES_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS:--Xms512m -Xmx512m}
          - TZ=Europe/Paris
      volumes:
          - elasticsearch_data:/usr/share/elasticsearch/data
      ports:
          - "9200:9200"
          # - "9300:9300" # utile uniquement pour un cluster
      ulimits:
          memlock:
              soft: -1
              hard: -1
      restart: unless-stopped
      healthcheck:
          test: [ "CMD", "curl", "-f", "http://localhost:9200/_cat/health" ]
          interval: 30s
          timeout: 10s
          retries: 5
volumes:
  database_data:
  elasticsearch_data:
